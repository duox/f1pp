/*syntax.hxx*/

class F1_PP_API f1::c_pp::syntax : public f1::pp::Isyntax
{
public:
	typedef f1::pp::Isyntax		super;
	typedef f1::c_pp::syntax	self;

	explicit syntax( const core::Iidentifier * ident = nullptr );

	const status_t	initialize();

	static const f1::guid_t	m_guid;
	virtual const f1::guid_t &	get_guid() const override;
	virtual const char *	get_ident_string() const override;
	virtual const char *	get_description_string() const override;

	virtual const f1::guid_t *	get_base_guid_list( __out size_t & count ) const override;
	virtual const f1::guid_t *	get_preferred_standard_list( __out size_t & count ) const override;

	virtual const status_t	attach_to_context( pp::context & ctx ) override;
	virtual const status_t	detach_from_context( pp::context & ctx ) override;

	virtual const status_t	on_attach_to_parser( pp::Iparser & par ) override;
	virtual const status_t	on_detach_from_parser( pp::Iparser & par ) override;

	virtual const status_t	new_parser( f1::core::Tref<pp::Iparser> & res, const core::Iidentifier * ident = nullptr ) override;
	virtual const status_t	new_macro( f1::core::Tref<pp::Iuser_macro> & res, const core::Iidentifier * ident = nullptr ) override;

public:
	enum {
		// Fatal errors
		IMSG_FATAL_ERROR_USER_N =	0x1000,
		IMSG_FATAL_ERROR_INVALID_FILE_NAME,
		IMSG_FATAL_ERROR_FILE_NOT_FOUND,
		IMSG_FATAL_ERROR_CANNOT_OPEN_FILE,
		IMSG_FATAL_ERROR_INVALID_PARAMETER,
		IMSG_FATAL_ERROR_INVALID_PARAMETER_S,

		IMSG_FATAL_ERROR_LAST,

		// Errors
		IMSG_ERROR_USER_N	= 0x2000,
		IMSG_ERROR_EXPECTED_DIRECTIVE_NAME,
		IMSG_ERROR_UNKNOWN_DIRECTIVE,
		IMSG_ERROR_UNKNOWN_FUNCTION,
		IMSG_ERROR_EXPECTED_S,
		IMSG_ERROR_EXPECTED_S_AFTER_S,
		IMSG_ERROR_EXPECTED_S_OR_S,
		IMSG_ERROR_EXPECTED_IDENTIFIER,
		IMSG_ERROR_EXPECTED_INTEGER,
		IMSG_ERROR_EXPECTED_STRING,
		IMSG_ERROR_EXPECTED_OPERATOR,
		IMSG_ERROR_EXPECTED_EXPRESSION,
		IMSG_ERROR_EXPECTED_INCLUDE_FILENAME,
		IMSG_ERROR_EXPECTED_FILENAME,
		IMSG_ERROR_EXPECTED_ALIAS_NAME,
		IMSG_ERROR_EXPECTED_TARGET_NAME,
		IMSG_ERROR_EXPECTED_ARG_LIST,
		IMSG_ERROR_EXPECTED_OPERAND,
		IMSG_ERROR_EXPECTED_PARAM_LIST,
		IMSG_ERROR_EXPECTED_PARAMETER_S,
		IMSG_ERROR_EXPECTED_VALUE,
		IMSG_ERROR_UNEXPECTED_S,
		IMSG_ERROR_UNEXPECTED_DIRECTIVE,
		IMSG_ERROR_UNEXPECTED_EOF,
		IMSG_ERROR_UNEXPECTED_EOL,
		IMSG_ERROR_UNEXPECTED_MACRO_END,
		IMSG_ERROR_UNTERMINATED_COMMENT,
		IMSG_ERROR_UNTERMINATED_STRING,
		IMSG_ERROR_UNTERMINATED_DIRECTIVE,
		IMSG_ERROR_UNTERMINATED_MACRO_CALL,
		IMSG_ERROR_TOO_LONG_CHAR_CONSTANT,
		IMSG_ERROR_INVALID_INTEGER_OPERAND,
		IMSG_ERROR_INVALID_ESCAPE_SEQUENCE,
		IMSG_ERROR_INVALID_CHAR_CONSTANT,
		IMSG_ERROR_DIVISION_BY_ZERO,
		IMSG_ERROR_OPERATOR_IS_NOT_SUPPORTED,
		IMSG_ERROR_OPERATOR_EXPECTS_MACRO_ARG,
		IMSG_ERROR_MACRO_ALREADY_DEFINED_S,
		IMSG_ERROR_MACRO_IS_IMMUTABLE,
		IMSG_ERROR_INSUFFICIENT_MACRO_ARGUMENTS,
		IMSG_ERROR_CANNOT_DEFINE_MACRO_S,
		IMSG_ERROR_NEWLINE_IN_STRING,
		IMSG_ERROR_INVALID_USE_OF,
		IMSG_ERROR_NAME_IS_ALREADY_OCCUPIED_S,
		IMSG_ERROR_NOT_FOUND_S,
		IMSG_ERROR_UNSUPPORTED_S,
		IMSG_ERROR_ARG_LIST_PARAM_LIST_MISMATCH_S,
		IMSG_ERROR_AMBIGUOUS_MACRO_CALL_S,
		IMSG_ERROR_EXPECTED_ARG_LIST_S,

		IMSG_ERROR_LAST,

		// Warnings
		IMSG_WARNING_USER_N = 0x3000,
		IMSG_WARNING_EXPECTED_S,
		IMSG_WARNING_UNEXPECTED_S,
		IMSG_WARNING_UNEXPECTED_CHARACTERS,
		IMSG_WARNING_UNEXPECTED_CHARACTERS_AFTER,
		IMSG_WARNING_UNEXPECTED_DIRECTIVE,
		IMSG_WARNING_UNKNOWN_PRAGMA,
		IMSG_WARNING_UNDEFINED_IDENTIFIER_IN_EXPR,
		IMSG_WARNING_UNDEFINED_IDENTIFIER_IN_UNDEF,
		IMSG_WARNING_NEGATIVE_SHIFT_AMOUNT,
		IMSG_WARNING_EXCESSIVE_INTEGER_SUFFIX,
		IMSG_WARNING_EXCESSIVE_CHARACTER_PREFIX,
		IMSG_WARNING_EXCESSIVE_STRING_PREFIX,
		IMSG_WARNING_UNARY_MINUS_APPLIED_TO_UINT,
		IMSG_WARNING_UNARY_PLUS_APPLIED_TO_UINT,
		IMSG_WARNING_MIXED_SIGNEDNESS,
		IMSG_WARNING_DEPRECATED_DIRECTIVE_S,
		IMSG_WARNING_DEPRECATED_MACRO_S,
		IMSG_WARNING_DEPRECATED_MACRO_S_S,
		IMSG_WARNING_DEPRECATED_INCLUDE_S,
		IMSG_WARNING_DEPRECATED_OPERATOR_S,
		IMSG_WARNING_EMPTY_MACRO_STACK,
		IMSG_WARNING_TOO_MANY_ARGUMENTS_S,
		IMSG_WARNING_DIFFERENT_SOURCES,
		IMSG_WARNING_UNMATCHED_QUOTES,
		IMSG_WARNING_INVALID_DIGRAPH_CC,
		IMSG_WARNING_INVALID_TRIGRAPH_C,
		IMSG_WARNING_RECURSIVE_MACRO_CALL_S,
		IMSG_WARNING_NESTED_COMMENT,
		IMSG_WARNING_REDUNANT_DEFINE,
		IMSG_WARNING_POSSIBLY_DETACHED_PARAM_LIST,
		IMSG_WARNING_DIFFERENT_INCLUDE_TYPES,
		IMSG_WARNING_CONSTANT_OVERFLOW,
		IMSG_WARNING_DIGRAPHS_FOUND,
		IMSG_WARNING_TRIGRAPHS_FOUND,
		IMSG_WARNING_UCN_FOUND,
		IMSG_WARNING_MACRO_EXP_NON_REPRODUCIBLE,	// expansion of date or time macro is not reproducible
		IMSG_WARNING_DEFINE_WHITESPACE_REQUIRED,
		IMSG_WARNING_DIRECTIVE_NOT_AVAILABLE,
		IMSG_WARNING_NOT_AVAILABLE_STANDARD_SS,		// 0x3027, 12327
		IMSG_WARNING_OPERATOR_NOT_AVAILABLE,
		IMSG_WARNING_MAXIMUM_NESTING_LEVEL_REACHED,
		IMSG_WARNING_INCLUDE_PATH_DIGIT_STARTED,
		IMSG_WARNING_NONSTD_CHAR_IN_IDENTIFIER,
		IMSG_WARNING_OUTSIDE_OF_COMMENT,
		IMSG_WARNING_CHARACTER_CONSTANT_OVERFLOW,
		IMSG_WARNING_TOO_LONG_CHARACTER_CONSTANT,
		IMSG_WARNING_TOO_LONG_IDENTIFIER,
		IMSG_WARNING_UNDEFINED_MACRO_IN_EXPRESSION,
		IMSG_WARNING_SEARCH_PATH_NOT_FOUND,
		IMSG_WARNING_MIXED_ENCODING,
		IMSG_WARNING_INVALID_RAW_STRING,
		IMSG_WARNING_MACRO_IS_NEVER_USED_S,
		IMSG_WARNING_OPERATION_ORDER_UNDEFINED_S,
		IMSG_WARNING_OCTAL_CONSTANT,
		IMSG_WARNING_EMPTY_PATHNAME,
		IMSG_WARNING_DIGIT_NOT_PART_OF_NUMERIC_C,
		IMSG_WARNING_RAW_STRING_TERM_IN_MIDDLE,
		IMSG_WARNING_USER,
		IMSG_WARNING_EXPECTED_IDENTIFIER,
		IMSG_WARNING_UNKNOWN_PRAGMA_S,

		IMSG_WARNING_LAST,

		// Information messages
		IMSG_INFO_USER_N = 0x4000,
		IMSG_INFO_PREDEFINED,
		IMSG_INFO_DEFINED_IN_COMMAND_LINE,
		IMSG_INFO_DEFINED_HERE,
		IMSG_INFO_STARTED_HERE,
		IMSG_INFO_USED_HERE,
		IMSG_INFO_POSSIBLE_DEFINITION,
		IMSG_INFO_LOCATED_HERE,

		IMSG_INFO_LAST,

		// Debug messages
		IMSG_DEBUG_USER_N = f1::msgout::debug_group::DEFAULT_MIN,

		IMSG_DEBUG_LAST,

		// Raw messages
		IMSG_RAW = 0x6000,	// "%s"
		IMSG_RAW_N,			// "%.*s"
		IMSG_RAW_INDENT,	// "%*s"
		IMSG_RAW_INDENT_N,	// "%*.*s"

		IMSG_RAW_LAST,
	};
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_fe[];
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_e[];
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_w[];
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_i[];
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_d[];
	static const f1::msgout::Igroup::message_desc m_msg_message_descs_r[];
protected:
	f1::msgout::raw_group	m_msgout_message_group_fe;
	f1::msgout::raw_group	m_msgout_message_group_e;
	f1::msgout::raw_group	m_msgout_message_group_w;
	f1::msgout::raw_group	m_msgout_message_group_i;
	f1::msgout::raw_group	m_msgout_message_group_d;
	f1::msgout::raw_group	m_msgout_message_group_r;
};

/*END OF syntax.hxx*/
